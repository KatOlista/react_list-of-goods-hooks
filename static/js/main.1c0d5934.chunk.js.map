{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","Default","sortField","setSortField","isHideResetBtn","goods","goodsArr","sort","a","b","Alphabet","localeCompare","Length","length","getSortedGoods","reverse","className","type","onClick","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,mEAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,WAAAA,E,oBAAAA,E,iBAAAA,M,KA4BE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,mBAASH,EAASM,SAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAiBF,GAAaH,EAO9BM,EAhCR,SAAwBC,EAAoBJ,GAmB1C,OAlBIA,IAAcP,EAASM,SACzBK,EAASC,MAAK,SAACC,EAAGC,GAChB,OAAQP,GACN,KAAKP,EAASe,SACZ,OAAOF,EAAEG,cAAcF,GAGzB,KAAKd,EAASiB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OAGtB,QACE,OAAO,MAMRP,EAaOQ,CAAe,GAAD,OAAKlB,GAAkBM,GAMnD,OAJIH,GACFM,EAAMU,UAIN,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMf,EAAaR,EAASe,WACrCM,UAAWG,IACT,iBAAkB,CAAE,WAAYjB,IAAcP,EAASe,WAJ3D,iCAUA,wBACEO,KAAK,SACLC,QAAS,kBAAMf,EAAaR,EAASiB,SACrCI,UAAWG,IACT,oBAAqB,CAAE,WAAYjB,IAAcP,EAASiB,SAJ9D,4BAUA,wBACEK,KAAK,SACLC,QAAS,kBAAMlB,GAAeD,IAC9BiB,UAAWG,IAAG,oBACZ,CAAE,YAAapB,IAJnB,qBASCK,GACC,wBACEa,KAAK,SACLC,QAAS,kBA7CjBlB,GAAc,QACdG,EAAaR,EAASM,UA6Cde,UAAU,4BAHZ,sBAUJ,6BACGX,EAAMe,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCzGnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1c0d5934.chunk.js","sourcesContent":["import cn from 'classnames';\nimport React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\n\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  Default = '',\n  Alphabet = 'alphabet',\n  Length = 'length',\n}\n\nfunction getSortedGoods(goodsArr: string[], sortField: SortType): string[] {\n  if (sortField !== SortType.Default) {\n    goodsArr.sort((a, b): number => {\n      switch (sortField) {\n        case SortType.Alphabet: {\n          return a.localeCompare(b);\n        }\n\n        case SortType.Length: {\n          return a.length - b.length;\n        }\n\n        default: {\n          return 0;\n        }\n      }\n    });\n  }\n\n  return goodsArr;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortField, setSortField] = useState(SortType.Default);\n  const isHideResetBtn = sortField || isReversed;\n\n  const resetField = () => {\n    setIsReversed(false);\n    setSortField(SortType.Default);\n  };\n\n  const goods = getSortedGoods([...goodsFromServer], sortField);\n\n  if (isReversed) {\n    goods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SortType.Alphabet)}\n          className={cn(\n            'button is-info', { 'is-light': sortField !== SortType.Alphabet },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SortType.Length)}\n          className={cn(\n            'button is-success', { 'is-light': sortField !== SortType.Length },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setIsReversed(!isReversed)}\n          className={cn('button is-warning',\n            { 'is-light': !isReversed })}\n        >\n          Reverse\n        </button>\n\n        {isHideResetBtn && (\n          <button\n            type=\"button\"\n            onClick={() => resetField()}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
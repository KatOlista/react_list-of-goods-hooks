{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","Default","sortType","setSortType","isResetButtonActive","filteredGoods","goods","sortField","goodsCopy","sort","a","b","Alphabet","localeCompare","Length","length","getSortedGoods","reverse","className","type","onClick","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,WAAAA,E,oBAAAA,E,iBAAAA,M,KA8BE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,SAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAsBF,GAAYH,EAOlCM,EAlCR,SAAwBC,EAAiBC,GACvC,IAAMC,EAAS,YAAOF,GAoBtB,OAlBIC,IAAcZ,EAASM,SACzBO,EAAUC,MAAK,SAACC,EAAGC,GACjB,OAAQJ,GACN,KAAKZ,EAASiB,SACZ,OAAOF,EAAEG,cAAcF,GAGzB,KAAKhB,EAASmB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OAGtB,QACE,OAAO,MAMRP,EAaeQ,CAAepB,EAAiBM,GAMtD,OAJIH,GACFM,EAAcY,UAId,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMjB,EAAYR,EAASiB,WACpCM,UAAWG,IACT,SAAU,UAAW,CAAE,WAAYnB,IAAaP,EAASiB,WAJ7D,iCAUA,wBACEO,KAAK,SACLC,QAAS,kBAAMjB,EAAYR,EAASmB,SACpCI,UAAWG,IACT,SAAU,aACV,CAAE,WAAYnB,IAAaP,EAASmB,SALxC,4BAWA,wBACEK,KAAK,SACLC,QAAS,kBAAMpB,GAAeD,IAC9BmB,UAAWG,IAAG,oBACZ,CAAE,YAAatB,IAJnB,qBASCK,GACC,wBACEe,KAAK,SACLC,QA/CU,WAClBpB,GAAc,GACdG,EAAYR,EAASM,UA8CbiB,UAAU,4BAHZ,sBAUJ,6BACGb,EAAciB,KAAI,SAAAC,GAAI,OACrB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC5GnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a37af616.chunk.js","sourcesContent":["import cn from 'classnames';\nimport React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\n\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  Default = '',\n  Alphabet = 'alphabet',\n  Length = 'length',\n}\n\nfunction getSortedGoods(goods: string[], sortField: SortType): string[] {\n  const goodsCopy = [...goods];\n\n  if (sortField !== SortType.Default) {\n    goodsCopy.sort((a, b): number => {\n      switch (sortField) {\n        case SortType.Alphabet: {\n          return a.localeCompare(b);\n        }\n\n        case SortType.Length: {\n          return a.length - b.length;\n        }\n\n        default: {\n          return 0;\n        }\n      }\n    });\n  }\n\n  return goodsCopy;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.Default);\n  const isResetButtonActive = sortType || isReversed;\n\n  const handleReset = () => {\n    setIsReversed(false);\n    setSortType(SortType.Default);\n  };\n\n  const filteredGoods = getSortedGoods(goodsFromServer, sortType);\n\n  if (isReversed) {\n    filteredGoods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortType(SortType.Alphabet)}\n          className={cn(\n            'button', 'is-info', { 'is-light': sortType !== SortType.Alphabet },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortType(SortType.Length)}\n          className={cn(\n            'button', 'is-success',\n            { 'is-light': sortType !== SortType.Length },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setIsReversed(!isReversed)}\n          className={cn('button is-warning',\n            { 'is-light': !isReversed })}\n        >\n          Reverse\n        </button>\n\n        {isResetButtonActive && (\n          <button\n            type=\"button\"\n            onClick={handleReset}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {filteredGoods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}